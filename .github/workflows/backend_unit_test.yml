name: Backend Unit Test

on:
  pull_request:
    paths:
      - 'backend/pong/**'
      - '.github/workflows/backend_unit_test.yml'

jobs:
  backend-unit-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # GitHubリポジトリの設定で定義した変数を.envファイルに書き込む
      - name: Create .env file
        run: |
          cat <<-EOF > .env
            FRONT_SERVER_PORT="${{ vars.FRONT_SERVER_PORT }}"
            BACKEND_SERVER_PORT="${{ vars.BACKEND_SERVER_PORT }}"
            DEBUG="${{ vars.DEBUG }}"
            SECRET_KEY="${{ secrets.SECRET_KEY }}"
            SUPERUSER_NAME="${{ secrets.SUPERUSER_NAME }}"
            SUPERUSER_EMAIL="${{ secrets.SUPERUSER_EMAIL }}"
            SUPERUSER_PASSWORD="${{ secrets.SUPERUSER_PASSWORD }}"
            DB_NAME="${{ secrets.DB_NAME }}"
            DB_USER="${{ secrets.DB_USER }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          EOF

      # backendコンテナのunit-testがDBコンテナに依存しているため、DBコンテナを先に起動する
      - name: Set up db container with docker compose
        run: |
          docker compose -f compose.yaml up -d db

      # DBコンテナのログを確認する
      - name: Check db container logs
        run: docker compose -f compose.yaml logs db

      # DBコンテナが起動するまで一定時間待機する
      - name: Wait for db service to be ready
        run: |
          timeout=30
          until docker compose -f compose.yaml exec -T db pg_isready -U user || [ $timeout -le 0 ]; do
            echo "Waiting for database... ($timeout seconds left)"
            sleep 1
            timeout=$((timeout-1))
          done
          if [ $timeout -le 0 ]; then
            echo "Database failed to start"
            exit 1
          fi

      # backendコンテナを起動する
      # --waitオプションによりstateがhealthyになるまで待機する
      - name: Set up backend container with docker compose
        run: |
          docker compose -f compose.yaml up -d backend --wait

      # backendコンテナのログを確認する
      - name: Check backend container logs
        run: docker compose -f compose.yaml logs backend

      # backendのunit-testを実行
      - name: Run Backend Unit Test
        run: docker compose -f compose.yaml exec -T backend make unit-test

      # docker composeを停止してクリーンアップする
      - name: Tear down docker compose
        run: docker compose -f compose.yaml down

      # .envファイルを削除
      - name: Cleanup sensitive file
        if: always()
        run: rm -f .env
