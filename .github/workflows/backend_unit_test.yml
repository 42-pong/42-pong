name: Backend Unit Test

on:
  pull_request:
    paths:
      - 'backend/pong/**'
      - '.github/workflows/backend_unit_test.yml'

jobs:
  backend-unit-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 5432:5432
          - 8000:8000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # GitHubリポジトリの設定で定義したシークレットを.envファイルに書き込む
      - name: Create .env file
        run: |
          echo "FRONT_SERVER_PORT=${{ vars.FRONT_SERVER_PORT }}" >> .env
          echo "BACKEND_SERVER_PORT=${{ vars.BACKEND_SERVER_PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "SUPERUSER_NAME=${{ secrets.SUPERUSER_NAME }}" >> .env
          echo "SUPERUSER_EMAIL=${{ secrets.SUPERUSER_EMAIL }}" >> .env
          echo "SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      # backendコンテナ内のテストがDBコンテナに依存しているため、2つのサービスを起動する
      - name: Set up Docker Compose
        run: |
          docker compose -f compose.yaml up -d backend db

      # backendコンテナのlogsを確認する
      - name: Check backend container logs
        run: docker compose -f compose.yaml logs backend

      # dbコンテナのlogsを確認する
      - name: Check db container logs
        run: docker compose -f compose.yaml logs db

      - name: Wait for db service to be ready
        run: |
          while ! docker compose -f compose.yaml exec -T db pg_isready -U user; do sleep 1; done

      - name: Run Backend Unit Test
        run: docker compose -f compose.yaml exec -T backend make unit-test

      # backendのユニットテストを実行
      - name: Tear down Docker Compose
        run: docker compose -f compose.yaml down
