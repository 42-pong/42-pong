services:
  frontend:
    container_name: frontend
    image: frontend:42
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    restart: always
    ports:
      - "${FRONT_SERVER_PORT}:8080"
    networks:
      - transcendence
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  backend:
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:42
    env_file: .env
    # WORKDIR(Dockerfile): /pong
    volumes:
      - ./backend/pong:/pong
    networks:
      - transcendence
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres:17.0-bullseye
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - transcendence

networks:
  transcendence:
    name: trc-network
    driver: bridge

volumes:
  db-data:
    name: trc-db-data
